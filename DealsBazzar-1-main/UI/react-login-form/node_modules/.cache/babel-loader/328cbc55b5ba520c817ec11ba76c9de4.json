{"ast":null,"code":"import * as actionType from '../actions/ActionTypes';\nexport default function ProductReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionType.LOAD_PRODUCTS:\n      return action.payload.products;\n\n    case actionType.ADD_PRODUCT:\n      return [...state, action.payload.product];\n\n    case actionType.CHANGE_PRODUCT_STATUS:\n      return state.map(prod => {\n        //console.log(action.payload)\n        if (prod._id === action.payload.pid) {\n          prod.prod_status = action.payload.status;\n          return prod;\n        } else return prod;\n      });\n\n    default:\n      return state;\n  }\n}\n_c = ProductReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductReducer\");","map":{"version":3,"sources":["/home/akash/Documents/part2/day103jan/ECommerceProject/adminpanel/src/appredux/reducers/ProductReducer.js"],"names":["actionType","ProductReducer","state","action","type","LOAD_PRODUCTS","payload","products","ADD_PRODUCT","product","CHANGE_PRODUCT_STATUS","map","prod","_id","pid","prod_status","status"],"mappings":"AAAA,OAAO,KAAKA,UAAZ,MAA4B,wBAA5B;AAEA,eAAe,SAASC,cAAT,GACf;AAAA,MADuCC,KACvC,uEAD6C,EAC7C;AAAA,MADgDC,MAChD;;AACI,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKJ,UAAU,CAACK,aAAhB;AAA+B,aAAOF,MAAM,CAACG,OAAP,CAAeC,QAAtB;;AAC/B,SAAKP,UAAU,CAACQ,WAAhB;AAA8B,aAAO,CACN,GAAGN,KADG,EACKC,MAAM,CAACG,OAAP,CAAeG,OADpB,CAAP;;AAG9B,SAAKT,UAAU,CAACU,qBAAhB;AAAuC,aAAOR,KAAK,CAACS,GAAN,CAAUC,IAAI,IAAE;AAC1D;AACA,YAAGA,IAAI,CAACC,GAAL,KAAWV,MAAM,CAACG,OAAP,CAAeQ,GAA7B,EAAiC;AAC7BF,UAAAA,IAAI,CAACG,WAAL,GAAmBZ,MAAM,CAACG,OAAP,CAAeU,MAAlC;AACA,iBAAOJ,IAAP;AACH,SAHD,MAII,OAAOA,IAAP;AACP,OAP6C,CAAP;;AAQvC;AAAS,aAAOV,KAAP;AAbb;AAeH;KAjBuBD,c","sourcesContent":["import * as actionType from '../actions/ActionTypes'\n\nexport default function ProductReducer(state=[],action)\n{\n    switch(action.type){\n        case actionType.LOAD_PRODUCTS: return action.payload.products\n        case actionType.ADD_PRODUCT : return [\n                                       ...state , action.payload.product\n                                ]\n        case actionType.CHANGE_PRODUCT_STATUS: return state.map(prod=>{\n            //console.log(action.payload)\n            if(prod._id===action.payload.pid){\n                prod.prod_status = action.payload.status\n                return prod\n            }else\n                return prod\n        })                                \n        default: return state                                \n    }\n}"]},"metadata":{},"sourceType":"module"}